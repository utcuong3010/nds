// Generated by the protocol buffer compiler.  PLZ EDIT WHEN YOU NEED!

package com.mbv.bp.common.integration.protoc;

import java.util.Map.Entry;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.google.protobuf.RpcCallback;
import com.google.protobuf.RpcController;
import com.mbv.bp.common.integration.ContextBase;
import com.mbv.bp.common.integration.IIntegration;
import com.mbv.bp.common.integration.IntegrationProtocService;
import com.mbv.bp.common.integration.IntegrationProtocService.HelloReq;
import com.mbv.bp.common.integration.IntegrationProtocService.HelloRes;
import com.mbv.bp.common.integration.IntegrationProtocService.KeyedValue;
import com.mbv.bp.common.integration.IntegrationProtocService.Request;
import com.mbv.bp.common.integration.IntegrationProtocService.Response;



public abstract class IntegrationProtocServiceImp extends IntegrationProtocService.Service implements IIntegration {
 
	protected static final Log log = LogFactory.getLog(IntegrationProtocServiceImp.class);
	@Override
	public void hello(RpcController controller, HelloReq request,
			RpcCallback<HelloRes> done) {
		HelloRes res = HelloRes.newBuilder().setType(IntegrationProtocService.ResType.SUCCESS).setMessage(new java.util.Date(System.currentTimeMillis()).toString()).build();
		done.run(res);
	}

	@Override
	public void process(RpcController controller, Request request,
			RpcCallback<Response> done) {
		Response.Builder resBuilder=Response.newBuilder();
		try{
			ContextBase context=new ContextBase();
			if (request.getPropertiesList()!=null){
				for (KeyedValue keyedValue:request.getPropertiesList()){
					context.put(keyedValue.getKey(),keyedValue.getValue());
				}
			}
			
			ContextBase ctxResult=process(context);
			
			for(Entry<String, String> entry: ctxResult.entrySet()){
				if (StringUtils.isNotBlank(entry.getKey())&&StringUtils.isNotBlank(entry.getValue()))
					resBuilder.addProperties(KeyedValue.newBuilder().setKey(entry.getKey()).setValue(entry.getValue()));
			}
			resBuilder.setType(IntegrationProtocService.ResType.SUCCESS);
			done.run(resBuilder.build());
		}catch (Exception e) {
			String errorMsg="Fail to insert user: "+e.getMessage();
			IntegrationProtocService.Exception.Builder exBuilder = IntegrationProtocService.Exception.newBuilder().setMessage(errorMsg);
			resBuilder.setException(exBuilder);
			resBuilder.setType(IntegrationProtocService.ResType.FAILURE);
            log.error(errorMsg ,e);
            done.run(resBuilder.build());
		}
	}

	
  
}
